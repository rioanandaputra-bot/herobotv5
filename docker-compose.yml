services:
    laravel.test:
        build:
            context: ./docker/sail
            dockerfile: Dockerfile
            args:
                WWWUSER: '${WWWUSER:-1000}'
                WWWGROUP: '${WWWGROUP:-1000}'
        image: sail-8.4/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            - '${REVERB_SERVER_PORT:-8080}:${REVERB_SERVER_PORT:-8080}'
            - '${WHATSAPP_PORT:-3000}:3000'
        environment:
            WWWUSER: '${WWWUSER:-1000}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'
            SUPERVISOR_PHP_USER: '${SUPERVISOR_PHP_USER:-sail}'
            SUPERVISOR_PHP_COMMAND: "/usr/bin/php -d variables_order=EGPCS /var/www/html/artisan octane:start --server=frankenphp --host=0.0.0.0 --admin-port=2019 --port='${APP_PORT:-80}' --workers=4 --max-requests=1000"
            XDG_CONFIG_HOME: /var/www/html/data/sail/config 
            XDG_DATA_HOME: /var/www/html/data/sail/data
        volumes:
            - '.:/var/www/html'
            - './data/sail/config:/var/www/html/data/sail/config'
            - './data/sail/data:/var/www/html/data/sail/data'
            - '/var/www/html/node_modules'
            - '/var/www/html/vendor'
        networks:
            - sail
        depends_on:
            mariadb:
                condition: service_healthy
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    memory: 2G
                reservations:
                    memory: 1G
    mariadb:
        image: 'mariadb:11'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
            WA_DB_DATABASE: '${WA_DB_DATABASE:-whatsapp}'
            WA_DB_TABLE_NAME: '${WA_DB_TABLE_NAME:-auth}'
        volumes:
            - 'mariadb_data:/var/lib/mysql'
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
            - './docker/mysql/create-whatsapp-database.sh:/docker-entrypoint-initdb.d/20-create-whatsapp-database.sh'
            - './docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - healthcheck.sh
                - '--connect'
                - '--innodb_initialized'
            retries: 3
            timeout: 5s
            interval: 10s
            start_period: 30s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    memory: 1G
                reservations:
                    memory: 512M

    redis:
        image: 'redis:7-alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'redis_data:/data'
            - './docker/redis/redis.conf:/usr/local/etc/redis/redis.conf'
        command: redis-server /usr/local/etc/redis/redis.conf
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 3s
            interval: 10s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    memory: 256M
                reservations:
                    memory: 128M
networks:
    sail:
        driver: bridge

volumes:
    mariadb_data:
        driver: local
    redis_data:
        driver: local
