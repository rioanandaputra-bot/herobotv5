FROM ubuntu:22.04 as base

LABEL maintainer="Taylor Otwell"

ARG WWWGROUP=1000
ARG NODE_VERSION=20
ARG POSTGRES_VERSION=15

WORKDIR /var/www/html

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC
ENV SUPERVISOR_PHP_USER="sail"

# Cache-friendly base system setup
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Base system packages (rarely changes - good for caching)
RUN apt-get update \
    && mkdir -p /etc/apt/keyrings \
    && apt-get install -y \
        gnupg \
        gosu \
        curl \
        ca-certificates \
        zip \
        unzip \
        git \
        supervisor \
        sqlite3 \
        libcap2-bin \
        libpng-dev \
        dnsutils \
        librsvg2-bin \
        fswatch \
        ffmpeg \
        nano \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# PHP repository setup (separate layer for better caching)
RUN curl -sS 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x14aa40ec0831756756d7f66c4f4ea0aae5267a6c' | gpg --dearmor | tee /etc/apt/keyrings/ppa_ondrej_php.gpg > /dev/null \
    && echo "deb [signed-by=/etc/apt/keyrings/ppa_ondrej_php.gpg] https://ppa.launchpadcontent.net/ondrej/php/ubuntu jammy main" > /etc/apt/sources.list.d/ppa_ondrej_php.list

# PHP installation (separate layer)
RUN apt-get update \
    && apt-get install -y \
        php8.4-cli \
        php8.4-dev \
        php8.4-pgsql \
        php8.4-sqlite3 \
        php8.4-gd \
        php8.4-curl \
        php8.4-imap \
        php8.4-mysql \
        php8.4-mbstring \
        php8.4-xml \
        php8.4-zip \
        php8.4-bcmath \
        php8.4-soap \
        php8.4-intl \
        php8.4-readline \
        php8.4-ldap \
        php8.4-msgpack \
        php8.4-igbinary \
        php8.4-redis \
        php8.4-swoole \
        php8.4-memcached \
        php8.4-pcov \
        php8.4-imagick \
        php8.4-xdebug \
        php8.4-opcache \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Composer installation (rarely changes)
RUN curl -sLS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer

# Node.js repository setup (separate layer)
RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_VERSION.x nodistro main" > /etc/apt/sources.list.d/nodesource.list

# Node.js installation (separate layer)
RUN apt-get update \
    && apt-get install -y nodejs \
    && npm install -g npm \
    && npm install -g yarn \
    && npm install -g pnpm \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# PostgreSQL client (separate layer)
RUN curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | tee /etc/apt/keyrings/pgdg.gpg >/dev/null \
    && echo "deb [signed-by=/etc/apt/keyrings/pgdg.gpg] http://apt.postgresql.org/pub/repos/apt jammy-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
    && apt-get update \
    && apt-get install -y postgresql-client-$POSTGRES_VERSION \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# PHP configuration
RUN setcap "cap_net_bind_service=+ep" /usr/bin/php8.4

# User setup
RUN groupadd --force -g $WWWGROUP sail
RUN useradd -ms /bin/bash --no-user-group -g $WWWGROUP -u $WWWUSER sail

# Custom PHP extension build stage
FROM base as extension-builder

# Build custom vector search extension
RUN cd /tmp && \
    git clone https://github.com/your-repo/vector-search-extension.git && \
    cd vector-search-extension && \
    phpize && \
    ./configure && \
    make && \
    make install

# Final stage
FROM base as final

# Copy extension from builder
COPY --from=extension-builder /usr/lib/php/20240924/vector_search.so /usr/lib/php/20240924/

# Enable the extension
RUN echo "extension=vector_search.so" > /etc/php/8.4/cli/conf.d/30-vector-search.ini

# Copy configuration files (these change more frequently)
COPY start-container /usr/local/bin/start-container
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY php.ini /etc/php/8.4/cli/conf.d/99-sail.ini

# Fix line endings and permissions
RUN sed -i 's/\r$//' /usr/local/bin/start-container \
    && sed -i 's/\r$//' /etc/supervisor/conf.d/supervisord.conf \
    && sed -i 's/\r$//' /etc/php/8.4/cli/conf.d/99-sail.ini \
    && chmod +x /usr/local/bin/start-container

# Ensure proper permissions for work directory
RUN chown -R $WWWUSER:$WWWGROUP /var/www/html \
    && chmod -R 755 /var/www/html

EXPOSE 8082

ENTRYPOINT ["start-container"]